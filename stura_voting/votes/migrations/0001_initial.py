# -*- coding: utf-8 -*-
# Generated by Django 1.9.3 on 2016-03-15 17:06
from __future__ import unicode_literals

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GeneralPoll',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name / Beschreibung der Abstimmung', max_length=250, verbose_name='Name')),
                ('poll_id', models.PositiveSmallIntegerField(verbose_name='AbstimmungsID innerhalb des Tages')),
                ('percent_required', models.DecimalField(decimal_places=2, default=Decimal('50.00'), help_text='Prozent die nötig sind, damit die Abstimmung als angenommen gilt', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Prozent')),
                ('all_votes', models.BooleanField(default=False, help_text='Wenn aktiviert werden ALLE Stimmen gezählt, auch jene die nicht mit abgestimmt haben!', verbose_name='Alle Stimmen?')),
            ],
        ),
        migrations.CreateModel(
            name='MedianVote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SchulzePollOption',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('option', models.CharField(help_text='Die Option für diesen Abstimmungsgegenstand', max_length=250, verbose_name='Option')),
            ],
        ),
        migrations.CreateModel(
            name='SchulzeVote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('rank', models.PositiveSmallIntegerField(verbose_name='Position im Ranking')),
                ('poll_option', models.ForeignKey(help_text='Option auf welch sich diese Antwort bezieht', on_delete=django.db.models.deletion.CASCADE, to='votes.SchulzePollOption', verbose_name='Option')),
            ],
        ),
        migrations.CreateModel(
            name='VotingDay',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(help_text='Datum an dem die Abstimmungen durchgeführt werden', verbose_name='Datum')),
            ],
        ),
        migrations.CreateModel(
            name='VotingTerm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Erstellungszeitpunkt')),
                ('name', models.CharField(help_text='Name der Abstimmungsperiode', max_length=40, unique=True, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='VotingWeightGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('term', models.ForeignKey(help_text='Abstimmungszeitraum dem diese Gewichtung zugeordnet wird', on_delete=django.db.models.deletion.CASCADE, to='votes.VotingTerm', verbose_name='Abstimmungszeitraum')),
            ],
        ),
        migrations.CreateModel(
            name='WeightedVoter',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name der abstimmenden Gruppe', max_length=75, verbose_name='Name')),
                ('weight', models.PositiveSmallIntegerField(help_text='Die Abstimmungsgewichtung der Gruppe', verbose_name='Gewichtung')),
                ('group', models.ForeignKey(help_text='Gruppe zu der diese Eintragung gehört', on_delete=django.db.models.deletion.CASCADE, to='votes.VotingWeightGroup', verbose_name='Gruppe')),
            ],
        ),
        migrations.CreateModel(
            name='MedianPoll',
            fields=[
                ('generalpoll_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='votes.GeneralPoll')),
                ('max_value', models.DecimalField(decimal_places=2, help_text='Betrag welcher beantragt wurde', max_digits=20, verbose_name='Abzustimmender Betrag')),
            ],
            bases=('votes.generalpoll',),
        ),
        migrations.CreateModel(
            name='SchulzePoll',
            fields=[
                ('generalpoll_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='votes.GeneralPoll')),
            ],
            bases=('votes.generalpoll',),
        ),
        migrations.AddField(
            model_name='votingday',
            name='weights',
            field=models.ForeignKey(help_text='Gewichtungsgruppe welche zur Auszählung verwendet wird', on_delete=django.db.models.deletion.CASCADE, to='votes.VotingWeightGroup', verbose_name='Gewichtungsgruppe'),
        ),
        migrations.AddField(
            model_name='schulzevote',
            name='voter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='votes.WeightedVoter', verbose_name='Abstimmende Gruppe'),
        ),
        migrations.AddField(
            model_name='medianvote',
            name='voter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='votes.WeightedVoter', verbose_name='Abstimmende Gruppe'),
        ),
        migrations.AddField(
            model_name='generalpoll',
            name='voting_day',
            field=models.ForeignKey(help_text='Tag an dem diese Abstimmung stattfindet', on_delete=django.db.models.deletion.CASCADE, to='votes.VotingDay', verbose_name='Abstimmungstag'),
        ),
        migrations.AlterUniqueTogether(
            name='weightedvoter',
            unique_together=set([('group', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='schulzevote',
            unique_together=set([('poll_option', 'voter')]),
        ),
        migrations.AddField(
            model_name='schulzepolloption',
            name='poll',
            field=models.ForeignKey(help_text='Abstimmung, zu der diese Option gehört', on_delete=django.db.models.deletion.CASCADE, to='votes.SchulzePoll', verbose_name='Schulze-Abstimmung'),
        ),
        migrations.AddField(
            model_name='medianvote',
            name='poll',
            field=models.ForeignKey(help_text='Abstimmung, auf welche sich die Antwort bezieht', on_delete=django.db.models.deletion.CASCADE, to='votes.MedianPoll', verbose_name='Abstimmung'),
        ),
        migrations.AlterUniqueTogether(
            name='generalpoll',
            unique_together=set([('voting_day', 'poll_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='medianvote',
            unique_together=set([('poll', 'voter')]),
        ),
    ]
